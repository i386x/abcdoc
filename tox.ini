[tox]
minversion = 2.0
envlist =
    py{34,35,36},
    coverage,flake8,pylint,mypy,bandit,safety,pydocstyle,
    doc8,docs

[testenv]
description =
    py{34,35,36}: Run unit tests under {envname}.
deps =
    mock >= 2.0.0
    unittest2 >= 1.1.0
commands =
    {envpython} -m tests

[testenv:coverage]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
description =
    Run code coverage tests.
deps =
    {[testenv]deps}
    coverage >= 4.5.1
commands =
    {envbindir}/coverage erase
    {envbindir}/coverage run -m tests
    {envbindir}/coverage combine
    {envbindir}/coverage report
    {envbindir}/coverage html

[testenv:flake8]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
description =
    Run style checks.
deps =
    flake8 >= 3.5.0
commands =
    {envbindir}/flake8 {toxinidir}/doit_doc_template {toxinidir}/tests {toxinidir}/docs {toxinidir}/setup.py

[testenv:pylint]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
description =
    Run python code static checker.
deps =
    pylint >= 2.1.1
commands =
    {envbindir}/pylint --rcfile {toxinidir}/.pylintrc {toxinidir}/doit_doc_template {toxinidir}/tests {toxinidir}/docs {toxinidir}/setup.py

[testenv:mypy]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
description =
    Run type checks.
deps =
    mypy >= 0.620
commands =
    {envbindir}/mypy {toxinidir}/doit_doc_template {toxinidir}/tests {toxinidir}/docs {toxinidir}/setup.py

[testenv:bandit]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
description =
    Run security analyzer.
deps =
    bandit >= 1.5.0
commands =
    {envbindir}/bandit -r {toxinidir}/doit_doc_template {toxinidir}/tests {toxinidir}/docs {toxinidir}/setup.py

[testenv:safety]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
description =
    Run security vulnerabilities checks.
deps =
    safety >= 1.8.4
commands =
    {envbindir}/safety check --full-report

[testenv:pydocstyle]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
description =
    Run docstring checks.
deps =
    pydocstyle >= 2.1.1
commands =
    {envbindir}/pydocstyle {toxinidir}/doit_doc_template {toxinidir}/tests {toxinidir}/docs {toxinidir}/setup.py

[testenv:doc8]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
description =
    Run documentation style checks.
deps =
    doc8 >= 0.8.0
commands =
    {envbindir}/doc8 {toxinidir}/docs

[testenv:docs]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
whitelist_externals = make
changedir = docs
description =
    Run documentation checks.
deps =
    {[testenv:docs-syncheck]deps}
    {[testenv:docs-linkcheck]deps}
    {[testenv:docs-spelling]deps}
    {[testenv:docs-coverage]deps}
    {[testenv:docs-doctest]deps}
commands =
    {[testenv:docs-syncheck]commands}
    {[testenv:docs-linkcheck]commands}
    {[testenv:docs-spelling]commands}
    {[testenv:docs-coverage]commands}
    {[testenv:docs-doctest]commands}

[testenv:docs-syncheck]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
whitelist_externals = make
changedir = docs
description =
    Run checks for syntax errors of document sources.
deps =
    sphinx >= 1.8.4
commands =
    make -f {toxinidir}/docs/Makefile syncheck PYTHONS={envpython} BUILDDIR={envtmpdir}/build SPHINXOPTS='-a -c {toxinidir}/docs/ -n -T -W'

[testenv:docs-linkcheck]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
whitelist_externals = make
changedir = docs
description =
    Run checks for integrity of all external links.
deps =
    sphinx >= 1.8.4
commands =
    make -f {toxinidir}/docs/Makefile linkcheck PYTHONS={envpython} BUILDDIR={envtmpdir}/build SPHINXOPTS='-a -c {toxinidir}/docs/ -n -T -W'

[testenv:docs-spelling]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
whitelist_externals = make
changedir = docs
description =
    Run a spell check of the documentation.
deps =
    sphinx >= 1.8.4
    sphinxcontrib-spelling >= 4.2.0
commands =
    make -f {toxinidir}/docs/Makefile spelling PYTHONS={envpython} BUILDDIR={envtmpdir}/build SPHINXOPTS='-a -c {toxinidir}/docs/ -n -T -W'

[testenv:docs-coverage]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
whitelist_externals = make
changedir = docs
description =
    Run coverage check of the documentation.
deps =
    sphinx >= 1.8.4
commands =
    make -f {toxinidir}/docs/Makefile coverage PYTHONS={envpython} BUILDDIR={envtmpdir}/build SPHINXOPTS='-a -c {toxinidir}/docs/ -n -T -W'

[testenv:docs-doctest]
basepython = python3
envdir = {toxinidir}/.env
skip_install = true
whitelist_externals = make
changedir = docs
description =
    Run all doctests embedded in the documentation.
deps =
    sphinx >= 1.8.4
commands =
    make -f {toxinidir}/docs/Makefile doctest PYTHONS={envpython} BUILDDIR={envtmpdir}/build SPHINXOPTS='-a -c {toxinidir}/docs/ -n -T -W'
