#                                                         -*- coding: utf-8 -*-
#! \file    ~/doit_doc_template/templates/base/components/main.yml
#! \author  Jiří Kučera, <sanczes AT gmail.com>
#! \stamp   2019-06-19 16:10:05 +0200
#! \project DoIt! Doc: Sphinx Extension for DoIt! Documentation
#! \license MIT
#! \version 0.0.0
#! \brief   Base template components definitions.
#

- name: doctype_xhtml1_strict
  render: |
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

- name: meta_content_language
  parameters:
    - lang: langcode
  render: |
    <meta http-equiv="content-language" content="{{ lang }}" />

- name: meta_content_type
  parameters:
    - type: text
    - charset: text
  render: |
    <meta http-equiv="content-type" content="{{ type }}{% if charset %}; charset={{ charset }}{% endif %}" />

- name: meta_author
  parameters:
    - author: text
  render: |
    <meta name="author" content="{{ author }}" />

- name: meta_keywords
  parameters:
    - keywords: list_of_strings
  render: |
    <meta name="keywords" content="{{ keywords|join(', ') }}" />

- name: meta_description
  parameters:
    - description: text
  render: |
    <meta name="description" content="{{ description }}" />

- name: meta_viewport
  parameters:
    - width: viewport_width
    - initial_scale: float
  render: |
    <meta name="viewport" content="{% set comma = joiner(', ') %}{% if width %}{% comma() %}width={{ width }}{% endif %}{% if initial_scale %}{% comma() %}initial-scale={{ initial_scale }}{% endif %}" />

- name: link_stylesheet
  parameters:
    - stylesheet: text
  render: |
    <link rel="stylesheet" type="text/css" href="{{ stylesheet }}" />

- name: script
  parameters:
    - script: text
  render: |
    <script type="text/javascript" src="{{ script }}"></script>

- name: title
  parameters:
    - title: text
  render: |
    <title>{{ title }}</title>

- name: head
  parameters:
    - page: page
  dependencies:
    - meta_content_language
    - meta_content_type
    - meta_author
    - meta_keywords
    - meta_description
    - meta_viewport
    - link_stylesheet
    - script
    - title
  render: |
    <head>
    {% if page.lang %}{{ meta_content_language(page.lang) }}{% endif %}
    {% if page.type %}{{ meta_content_type(page.type, page.charset) }}{% endif %}
    {% if page.author %}{{ meta_author(page.author) }}{% endif %}
    {% if page.keywords %}{{ meta_keywords(page.keywords) }}{% endif %}
    {% if page.description %}{{ meta_description(page.description) }}{% endif %}
    {% if page.width or page.initial_scale %}{{ meta_viewport(page.width, page.initial_scale) }}{% endif %}
    {% for x in page.stylesheets %}
      {{ link_stylesheet(x) }}
    {% endfor %}
    {% for x in page.scripts %}
      {{ script(x) }}
    {% endfor %}
    {{ title(page.title) }}
    </head>

- name: emphasize
  parameters:
    - text: text
  render: |
    <em>{{ text }}</em>

- name: header
  parameters:
    - title: text
    - subtitle: text
  render: |
    <div{% if _meta.header['class'] %} class="{{ _meta.header['class'] }}"{% endif %}>
      <h1>{{ title }}</h1>
      {% if subtitle %}<p>{{ subtitle }}</p>{% endif %}
    </div>

- name: lnavbar
  parameters:
    - links: list_of_links
  render: |
    <div{% if _meta.lnavbar['class'] %} class="{{ _meta.lnavbar['class'] }}"{% endif %}>
    {% for l in links %}
      <a href="{{ l.href }}">{{ l.title }}</a>
    {% endfor %}
    </div>

- name: render_toc_part
  parameters:
    - tp: table_of_contents_part
  render: |
    <li><a href="{{ tp.href }}">{{ tp.title }}</a></li>
    {% if tp.parts %}
    <ul>
      {% for p in tp.parts %}
        {{ render_toc_part(p) }}
      {% endfor %}
    </ul>
    {% endif %}

- name: toc
  parameters:
    - toc: table_of_contents
  dependencies:
    - render_toc_part
  render: |
    <h2{% if _meta.table_of_contents.title.id %} id="{{ _meta.table_of_contents.title.id }}"{% endif %}>{{ toc.title }}</h2>
    <ul{% if _meta.table_of_contents['class'] %} class="{{ _meta.table_of_contents['class'] }}"{% endif %}>
    {% for p in toc.parts %}
      <p>
      {{ render_toc_part(p) }}
      </p>
    {% endfor %}
    </ul>
